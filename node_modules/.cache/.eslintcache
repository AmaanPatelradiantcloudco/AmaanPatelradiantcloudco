[{"C:\\Users\\Amaan\\Downloads\\React-golang-project\\src\\index.js":"1","C:\\Users\\Amaan\\Downloads\\React-golang-project\\src\\App.js":"2","C:\\Users\\Amaan\\Downloads\\React-golang-project\\src\\pages\\AddAuthor.js":"3","C:\\Users\\Amaan\\Downloads\\React-golang-project\\src\\pages\\Register.js":"4","C:\\Users\\Amaan\\Downloads\\React-golang-project\\src\\pages\\UpdateBook.js":"5","C:\\Users\\Amaan\\Downloads\\React-golang-project\\src\\pages\\AuthorList.js":"6","C:\\Users\\Amaan\\Downloads\\React-golang-project\\src\\pages\\Login.js":"7","C:\\Users\\Amaan\\Downloads\\React-golang-project\\src\\pages\\Protected.js":"8","C:\\Users\\Amaan\\Downloads\\React-golang-project\\src\\pages\\UpdateAuthor.js":"9","C:\\Users\\Amaan\\Downloads\\React-golang-project\\src\\pages\\BookList.js":"10","C:\\Users\\Amaan\\Downloads\\React-golang-project\\src\\components\\home.js":"11","C:\\Users\\Amaan\\Downloads\\React-golang-project\\src\\pages\\AddBook.js":"12"},{"size":221,"mtime":1644419071546,"results":"13","hashOfConfig":"14"},{"size":2828,"mtime":1646678924700,"results":"15","hashOfConfig":"14"},{"size":1250,"mtime":1646657989949,"results":"16","hashOfConfig":"14"},{"size":4451,"mtime":1646678159834,"results":"17","hashOfConfig":"14"},{"size":1843,"mtime":1646655249854,"results":"18","hashOfConfig":"14"},{"size":2083,"mtime":1646672991600,"results":"19","hashOfConfig":"14"},{"size":2012,"mtime":1646675820504,"results":"20","hashOfConfig":"14"},{"size":368,"mtime":1646655214418,"results":"21","hashOfConfig":"14"},{"size":2273,"mtime":1646655239978,"results":"22","hashOfConfig":"14"},{"size":2103,"mtime":1646655188995,"results":"23","hashOfConfig":"14"},{"size":3604,"mtime":1646679955718,"results":"24","hashOfConfig":"14"},{"size":1425,"mtime":1646680578122,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"1l086iw",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"29"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"29"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"29"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"29"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Amaan\\Downloads\\React-golang-project\\src\\index.js",[],[],["68","69"],"C:\\Users\\Amaan\\Downloads\\React-golang-project\\src\\App.js",["70","71","72"],[],"C:\\Users\\Amaan\\Downloads\\React-golang-project\\src\\pages\\AddAuthor.js",["73"],[],"import Nav from \"../components/home\";\r\nimport { useState } from 'react'\r\n\r\nfunction AddNewAuthor() {\r\n    const [name, setName] = useState(\"\")\r\n    const [description, setDescription] = useState(\"\")\r\n\r\n    async function addnewAuthor() {\r\n        let item = { name, description }\r\n        console.warn()\r\n\r\n        let result = await fetch(\"http://localhost:8080/authors/create\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify(item)\r\n        })\r\n\r\n        result = await result.json()\r\n        alert(\"Your Author Has Been Added, Kindly CHeck it in the AuthorList Tab\")\r\n\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <Nav />\r\n            <div className=\"col-sm-6 offset-sm-3\">\r\n                <h1>Add Author</h1>\r\n                <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} className=\"form-control\" placeholder=\"name\" />\r\n                <input type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)} className=\"form-control\" placeholder=\"description\" />\r\n                <br></br>\r\n                <button onClick={addnewAuthor} className=\"w-100 btn btn-lg btn-primary\">Add Author</button>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewAuthor\r\n","C:\\Users\\Amaan\\Downloads\\React-golang-project\\src\\pages\\Register.js",[],[],"C:\\Users\\Amaan\\Downloads\\React-golang-project\\src\\pages\\UpdateBook.js",["74","75","76","77"],[],"import Nav from \"../components/home\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport { NavItem } from \"react-bootstrap\";\r\n\r\nfunction UpdateBook(props) {\r\n    const [data, setData] = useState([])\r\n    const[name,setName]=useState(\"\")\r\n    const[description,setDescription]=useState(\"\")\r\n     const formData = new FormData();\r\n     console.warn(\"props\", props.match.params.id)\r\n\r\n    useEffect(async () => {\r\n        let result = await fetch(\"http://localhost:8080/books/\" + props.match.params.id);\r\n        result = await result.json();\r\n        console.log(name,description)\r\n        setData(result)\r\n        setName(result.name)\r\n        setDescription(result.description)\r\n    }\r\n    ,[])    \r\n    async function editBook(id){\r\n        formData.append('name',name);\r\n        formData.append('description',description);\r\n        console.log(formData.get('name')) \r\n        console.log(formData.get('description')) \r\n        let result = await fetch(\"http://localhost:8080/books/\" + props.match.params.id, {\r\n            method: \"PATCH\",\r\n            body: formData\r\n        })\r\n         result = await result.json();\r\n        \r\n        alert(id)\r\n    }\r\n    return (\r\n        <div>\r\n            <Nav />\r\n            <div className=\"col-sm-6 offset-sm-3\">\r\n                <h1>Update Book</h1>\r\n                <input type=\"text\" onChange={(e) => setName(e.target.value)} className=\"form-control\" defaultValue={data.name} /><br />\r\n                <input type=\"text\" onChange={(e) => setDescription(e.target.value)} className=\"form-control\" defaultValue={data.description} /><br />\r\n                <button onClick={() => editBook(data.id)} className=\"w-100 btn btn-lg btn-primary\">Update Book</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(UpdateBook);","C:\\Users\\Amaan\\Downloads\\React-golang-project\\src\\pages\\AuthorList.js",["78","79"],[],"C:\\Users\\Amaan\\Downloads\\React-golang-project\\src\\pages\\Login.js",[],[],"C:\\Users\\Amaan\\Downloads\\React-golang-project\\src\\pages\\Protected.js",["80"],[],"import React, { useState, useEffect } from \"react\";\r\nimport Nav from \"../components/home\";\r\nfunction Protected() {\r\n    useEffect(() => {\r\n        if (!localStorage.getItem('user-info')) {\r\n            return <redirect to=\"/register\" />\r\n\r\n        }\r\n    })\r\n    return (\r\n        <div>\r\n            <Nav />\r\n\r\n        </div>\r\n\r\n    );\r\n};\r\nexport default Protected;\r\n","C:\\Users\\Amaan\\Downloads\\React-golang-project\\src\\pages\\UpdateAuthor.js",["81","82","83"],[],"import { useEffect, useState } from \"react\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport Nav from \"../components/home\";\r\n\r\nfunction UpdateAuthor(props) {\r\n    const [data, setData] = useState([])\r\n    const [name, setName] = useState(\"\")\r\n    const [description, setDescription] = useState(\"\")\r\n    const formData = new FormData();\r\n    console.warn(\"props\", props.match.params.id)\r\n\r\n    useEffect(async () => {\r\n        let result = await fetch(\"http://localhost:8080/authors/\" + props.match.params.id);\r\n\r\n        result = await result.json();\r\n        console.log(name, description)\r\n        setData(result)\r\n        setName(result.name)\r\n        setDescription(result.description)\r\n    }, [])\r\n    \r\n\r\n    async function editAuthor(ID){\r\n        try{\r\n            formData.append('name',name);\r\n            formData.append('description',description);\r\n            console.log(formData.get('name')) \r\n            console.log(formData.get('description')) \r\n            let result = await fetch (\"http://localhost:8080/authors/\"+ props.match.param.id,{\r\n                method: \"PATCH\",\r\n                body:formData\r\n            })\r\n            result =await result.json();\r\n            alert(ID)\r\n        }\r\n        catch(err){\r\n            console.log(err)\r\n        }\r\n    }\r\n    // console.warn(\"props\", props.match.params.id)\r\n    // useEffect(async () => {\r\n    //     let result = await fetch(\"http://localhost:8080/authors/\" + props.match.params.id, {\r\n    //         method: \"PATCH\"\r\n    //     });\r\n    //     result = await result.json();\r\n    //     setData(result)\r\n    // })\r\n    return (\r\n        <div>\r\n            <Nav />\r\n            <div className=\"col-sm-6 offset-sm-3\">\r\n                <h1>Update Author</h1>\r\n                <input type=\"text\" onChange={(e) => setName(e.target.value)} className=\"form-control\" defaultValue={data.name} /> <br /> <br />\r\n                <input type=\"text\" onChange={(e) => setDescription(e.target.value)} className=\"form-control\" defaultValue={data.description} /> <br /> <br />\r\n\r\n                <button onClick={(e) => editAuthor(data.ID)} className=\"w-100 btn btn-lg btn-primary\">Update Author</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(UpdateAuthor);\r\n\r\n\r\n","C:\\Users\\Amaan\\Downloads\\React-golang-project\\src\\pages\\BookList.js",["84"],[],"import Nav from \"../components/home\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Table } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction BookList() {\r\n\r\n    const [data, setData] = useState([]);\r\n    useEffect(() => {\r\n        getData();\r\n    }, [])\r\n\r\n    async function deletebooks(ID) {\r\n        let result = await fetch(\"http://localhost:8080/books/\" + ID, {\r\n            method: \"DELETE\"\r\n        });\r\n        result = await result.json();\r\n        console.warn(\"result\", data)\r\n        getData()\r\n    }\r\n    async function getData() {\r\n        let result = await fetch(\"http://localhost:8080/books\");\r\n        result = await result.json();\r\n        setData(result)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Nav />\r\n            <div className=\"col-sm-6 offset-sm-3\">\r\n\r\n                <h1>BooksList</h1>\r\n                <Table>\r\n                    <tbody>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Description</th>\r\n                            <th>Delete Books</th>\r\n                            <th>Update Books</th>\r\n\r\n                        </tr>\r\n                        {\r\n                            data.map((item) =>\r\n                                <tr>\r\n                                    \r\n                                    <td>{item.name}</td>\r\n                                    <td>{item.description}</td>\r\n                                    <td><span onClick={() => deletebooks(item.ID)} className=\"delete\">Delete</span></td>\r\n                                    <td>\r\n                                        <Link to={\"updatebook/\" + item.ID}>\r\n                                            <span className=\"update\">Update</span>\r\n                                        </Link>\r\n                                    </td>\r\n\r\n                                </tr>\r\n                            )\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BookList;\r\n","C:\\Users\\Amaan\\Downloads\\React-golang-project\\src\\components\\home.js",["85"],[],"C:\\Users\\Amaan\\Downloads\\React-golang-project\\src\\pages\\AddBook.js",["86"],[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":3,"column":52,"nodeType":"93","messageId":"94","endLine":3,"endColumn":58},{"ruleId":"91","severity":1,"message":"95","line":8,"column":8,"nodeType":"93","messageId":"94","endLine":8,"endColumn":17},{"ruleId":"96","severity":1,"message":"97","line":52,"column":1,"nodeType":"98","messageId":"99","endLine":52,"endColumn":51},{"ruleId":"91","severity":1,"message":"100","line":17,"column":9,"nodeType":"93","messageId":"94","endLine":17,"endColumn":15},{"ruleId":"91","severity":1,"message":"101","line":4,"column":10,"nodeType":"93","messageId":"94","endLine":4,"endColumn":17},{"ruleId":"102","severity":1,"message":"103","line":13,"column":15,"nodeType":"104","endLine":20,"endColumn":6},{"ruleId":"102","severity":1,"message":"105","line":21,"column":6,"nodeType":"106","endLine":21,"endColumn":8,"suggestions":"107"},{"ruleId":"91","severity":1,"message":"100","line":31,"column":10,"nodeType":"93","messageId":"94","endLine":31,"endColumn":16},{"ruleId":"91","severity":1,"message":"108","line":6,"column":10,"nodeType":"93","messageId":"94","endLine":6,"endColumn":18},{"ruleId":"91","severity":1,"message":"100","line":19,"column":5,"nodeType":"93","messageId":"94","endLine":19,"endColumn":11},{"ruleId":"91","severity":1,"message":"109","line":1,"column":17,"nodeType":"93","messageId":"94","endLine":1,"endColumn":25},{"ruleId":"102","severity":1,"message":"103","line":12,"column":15,"nodeType":"104","endLine":20,"endColumn":6},{"ruleId":"102","severity":1,"message":"105","line":20,"column":8,"nodeType":"106","endLine":20,"endColumn":10,"suggestions":"110"},{"ruleId":"91","severity":1,"message":"100","line":33,"column":13,"nodeType":"93","messageId":"94","endLine":33,"endColumn":19},{"ruleId":"91","severity":1,"message":"100","line":17,"column":9,"nodeType":"93","messageId":"94","endLine":17,"endColumn":15},{"ruleId":"91","severity":1,"message":"111","line":2,"column":10,"nodeType":"93","messageId":"94","endLine":2,"endColumn":16},{"ruleId":"91","severity":1,"message":"100","line":20,"column":9,"nodeType":"93","messageId":"94","endLine":20,"endColumn":15},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"no-unused-vars","'Routes' is defined but never used.","Identifier","unusedVar","'Protected' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'result' is assigned a value but never used.","'NavItem' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'description', 'name', and 'props.match.params.id'. Either include them or remove the dependency array.","ArrayExpression",["114"],"'faCoffee' is defined but never used.","'useState' is defined but never used.",["115"],"'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},{"desc":"116","fix":"118"},"Update the dependencies array to be: [description, name, props.match.params.id]",{"range":"119","text":"120"},{"range":"121","text":"120"},[740,742],"[description, name, props.match.params.id]",[706,708]]