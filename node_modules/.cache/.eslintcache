[{"C:\\Users\\Amaan\\Downloads\\React-golang-project\\src\\index.js":"1","C:\\Users\\Amaan\\Downloads\\React-golang-project\\src\\App.js":"2","C:\\Users\\Amaan\\Downloads\\React-golang-project\\src\\pages\\AddAuthor.js":"3","C:\\Users\\Amaan\\Downloads\\React-golang-project\\src\\pages\\Register.js":"4","C:\\Users\\Amaan\\Downloads\\React-golang-project\\src\\pages\\UpdateBook.js":"5","C:\\Users\\Amaan\\Downloads\\React-golang-project\\src\\pages\\AuthorList.js":"6","C:\\Users\\Amaan\\Downloads\\React-golang-project\\src\\pages\\Login.js":"7","C:\\Users\\Amaan\\Downloads\\React-golang-project\\src\\pages\\Protected.js":"8","C:\\Users\\Amaan\\Downloads\\React-golang-project\\src\\pages\\UpdateAuthor.js":"9","C:\\Users\\Amaan\\Downloads\\React-golang-project\\src\\pages\\BookList.js":"10","C:\\Users\\Amaan\\Downloads\\React-golang-project\\src\\components\\home.js":"11","C:\\Users\\Amaan\\Downloads\\React-golang-project\\src\\pages\\AddBook.js":"12"},{"size":221,"mtime":1644419071546,"results":"13","hashOfConfig":"14"},{"size":2828,"mtime":1646678924700,"results":"15","hashOfConfig":"14"},{"size":1250,"mtime":1646657989949,"results":"16","hashOfConfig":"14"},{"size":4451,"mtime":1646912061624,"results":"17","hashOfConfig":"14"},{"size":1843,"mtime":1646655249854,"results":"18","hashOfConfig":"14"},{"size":2083,"mtime":1646672991600,"results":"19","hashOfConfig":"14"},{"size":2012,"mtime":1646675820504,"results":"20","hashOfConfig":"14"},{"size":368,"mtime":1646655214418,"results":"21","hashOfConfig":"14"},{"size":2273,"mtime":1646655239978,"results":"22","hashOfConfig":"14"},{"size":2103,"mtime":1646655188995,"results":"23","hashOfConfig":"14"},{"size":3604,"mtime":1646912008391,"results":"24","hashOfConfig":"14"},{"size":1425,"mtime":1646680578122,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"1l086iw",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"29"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"29"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"29"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"29"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"29"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},"C:\\Users\\Amaan\\Downloads\\React-golang-project\\src\\index.js",[],[],["72","73"],"C:\\Users\\Amaan\\Downloads\\React-golang-project\\src\\App.js",["74","75","76"],[],"import React from 'react';\r\nimport Login from \"./pages/Login\";\r\nimport './App.css'; import { BrowserRouter, Route, Routes } from \"react-router-dom\";\r\n// import Home from \"./pages/Home\";\r\nimport Register from \"./pages/Register\";\r\nimport AddBook from \"./pages/AddBook\";\r\nimport UpdateBook from \"./pages/UpdateBook\";\r\nimport Protected from \"./pages/Protected\";\r\nimport AddAuthor from \"./pages/AddAuthor\";\r\nimport BookList from \"./pages/BookList\";\r\nimport AuthorList from \"./pages/AuthorList\";\r\nimport UpdateAuthor from \"./pages/UpdateAuthor\";\r\n\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <BrowserRouter>\r\n\r\n                <main className=\"form-signin\">\r\n                    <Route>\r\n                        {/* <Route path=\"/\" element={<Home />}></Route>\r\n                        <Route path=\"/login\" element={<Login />}></Route>\r\n                        <Route path=\"/register\" element={<Register />}></Route>\r\n                        <Route path=\"/addauthor\" element={<AddAuthor />}></Route>\r\n                        <Route path=\"/authorlist\" element={<AuthorList />}></Route>\r\n                        <Route path=\"/updateauthor\" element={<UpdateAuthor />}></Route>\r\n                        <Route path=\"/addbook\" element={<AddBook />}></Route>\r\n                        <Route path=\"/booklist\" element={<BookList />}></Route>\r\n                        <Route path=\"/updatebook/\" element={<UpdateBook />}></Route> */}\r\n                        {/* <Route path=\"/\" render={routeProps => (<Home routeProps={routeProps} animate={true} />)}/> */}\r\n                        <Route path=\"/login/\" render={routeProps => (<Login routeProps={routeProps} animate={true} />)}/>\r\n                        <Route path=\"/register/\" render={routeProps => (<Register routeProps={routeProps} animate={true} />)}/>\r\n                        <Route path=\"/addNewauthor/\" render={routeProps => (<AddAuthor routeProps={routeProps} animate={true} />)}/>\r\n                        <Route path=\"/authorlist/\" render={routeProps => (<AuthorList routeProps={routeProps} animate={true} />)}/>\r\n                        <Route path=\"/updateauthor/:id\" render={routeProps => (<UpdateAuthor routeProps={routeProps} animate={true} />)}/>\r\n                        <Route path=\"/addNewbook/\" render={routeProps => (<AddBook routeProps={routeProps} animate={true} />)}/>\r\n                        <Route path=\"/bookslist/\" render={routeProps => (<BookList routeProps={routeProps} animate={true} />)}/>\r\n                        <Route path=\"/updatebook/:id\" render={routeProps => (<UpdateBook routeProps={routeProps} animate={true} />)}/>\r\n                        </Route>\r\n\r\n                </main>\r\n            </BrowserRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n{/* <Route path=\"/\" element={<App />}></Route> */}","C:\\Users\\Amaan\\Downloads\\React-golang-project\\src\\pages\\AddAuthor.js",["77"],[],"import Nav from \"../components/home\";\r\nimport { useState } from 'react'\r\n\r\nfunction AddNewAuthor() {\r\n    const [name, setName] = useState(\"\")\r\n    const [description, setDescription] = useState(\"\")\r\n\r\n    async function addnewAuthor() {\r\n        let item = { name, description }\r\n        console.warn()\r\n\r\n        let result = await fetch(\"http://localhost:8080/authors/create\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify(item)\r\n        })\r\n\r\n        result = await result.json()\r\n        alert(\"Your Author Has Been Added, Kindly CHeck it in the AuthorList Tab\")\r\n\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <Nav />\r\n            <div className=\"col-sm-6 offset-sm-3\">\r\n                <h1>Add Author</h1>\r\n                <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} className=\"form-control\" placeholder=\"name\" />\r\n                <input type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)} className=\"form-control\" placeholder=\"description\" />\r\n                <br></br>\r\n                <button onClick={addnewAuthor} className=\"w-100 btn btn-lg btn-primary\">Add Author</button>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewAuthor\r\n","C:\\Users\\Amaan\\Downloads\\React-golang-project\\src\\pages\\Register.js",[],[],"C:\\Users\\Amaan\\Downloads\\React-golang-project\\src\\pages\\UpdateBook.js",["78","79","80","81"],[],"import Nav from \"../components/home\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport { NavItem } from \"react-bootstrap\";\r\n\r\nfunction UpdateBook(props) {\r\n    const [data, setData] = useState([])\r\n    const[name,setName]=useState(\"\")\r\n    const[description,setDescription]=useState(\"\")\r\n     const formData = new FormData();\r\n     console.warn(\"props\", props.match.params.id)\r\n\r\n    useEffect(async () => {\r\n        let result = await fetch(\"http://localhost:8080/books/\" + props.match.params.id);\r\n        result = await result.json();\r\n        console.log(name,description)\r\n        setData(result)\r\n        setName(result.name)\r\n        setDescription(result.description)\r\n    }\r\n    ,[])    \r\n    async function editBook(id){\r\n        formData.append('name',name);\r\n        formData.append('description',description);\r\n        console.log(formData.get('name')) \r\n        console.log(formData.get('description')) \r\n        let result = await fetch(\"http://localhost:8080/books/\" + props.match.params.id, {\r\n            method: \"PATCH\",\r\n            body: formData\r\n        })\r\n         result = await result.json();\r\n        \r\n        alert(id)\r\n    }\r\n    return (\r\n        <div>\r\n            <Nav />\r\n            <div className=\"col-sm-6 offset-sm-3\">\r\n                <h1>Update Book</h1>\r\n                <input type=\"text\" onChange={(e) => setName(e.target.value)} className=\"form-control\" defaultValue={data.name} /><br />\r\n                <input type=\"text\" onChange={(e) => setDescription(e.target.value)} className=\"form-control\" defaultValue={data.description} /><br />\r\n                <button onClick={() => editBook(data.id)} className=\"w-100 btn btn-lg btn-primary\">Update Book</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(UpdateBook);","C:\\Users\\Amaan\\Downloads\\React-golang-project\\src\\pages\\AuthorList.js",["82","83"],[],"import Nav from \"../components/home\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Table } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nfunction AuthorList(){\r\n    const [data, setData] = useState([]);\r\n    useEffect( () => {\r\n        getData();\r\n    }, [])\r\n\r\nasync function  deleteOperation(ID){\r\n    let result = await fetch(\"http://localhost:8080/authors/\"+ID,{\r\n        method:'DELETE'\r\n    });\r\n    result = await result.json();\r\n    console.warn(\"result\",data)\r\n    getData()\r\n}   \r\n\r\nasync function getData(){\r\n    let result = await fetch(\"http://localhost:8080/authors\");\r\n    result = await result.json();\r\n    setData(result)\r\n}   \r\n\r\n return(\r\n    <div>\r\n        <Nav />\r\n\r\n        <div className=\"col-sm-8 offset-sm-2\">\r\n            <h1>AuthorsList</h1>\r\n            <Table>\r\n                <tbody>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>Description</th>\r\n                    <th>Delete Entry</th>\r\n                    <th>Update Authors</th>\r\n                </tr>\r\n                {\r\n                    data.map((item) => \r\n                        <tr>\r\n                            <td>{item.name}</td>\r\n                            <td>{item.description}</td>\r\n                            <td><span onClick={() =>deleteOperation(item.ID) } className=\"delete\">Delete</span><FontAwesomeIcon icon=\"fa-solid fa-circle-trash\" /></td>\r\n                            \r\n \r\n \r\n                         \r\n                            <td>\r\n                                <Link to ={\"updateauthor/\"+item.ID}>\r\n                                <span  className=\"update\">Update</span>\r\n                                </Link>\r\n                                </td>\r\n                        </tr>\r\n                    )\r\n                }\r\n                </tbody>\r\n            </Table>\r\n            </div>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default AuthorList;\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\Amaan\\Downloads\\React-golang-project\\src\\pages\\Login.js",[],[],"C:\\Users\\Amaan\\Downloads\\React-golang-project\\src\\pages\\Protected.js",["84"],[],"import React, { useState, useEffect } from \"react\";\r\nimport Nav from \"../components/home\";\r\nfunction Protected() {\r\n    useEffect(() => {\r\n        if (!localStorage.getItem('user-info')) {\r\n            return <redirect to=\"/register\" />\r\n\r\n        }\r\n    })\r\n    return (\r\n        <div>\r\n            <Nav />\r\n\r\n        </div>\r\n\r\n    );\r\n};\r\nexport default Protected;\r\n","C:\\Users\\Amaan\\Downloads\\React-golang-project\\src\\pages\\UpdateAuthor.js",["85","86","87"],[],"import { useEffect, useState } from \"react\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport Nav from \"../components/home\";\r\n\r\nfunction UpdateAuthor(props) {\r\n    const [data, setData] = useState([])\r\n    const [name, setName] = useState(\"\")\r\n    const [description, setDescription] = useState(\"\")\r\n    const formData = new FormData();\r\n    console.warn(\"props\", props.match.params.id)\r\n\r\n    useEffect(async () => {\r\n        let result = await fetch(\"http://localhost:8080/authors/\" + props.match.params.id);\r\n\r\n        result = await result.json();\r\n        console.log(name, description)\r\n        setData(result)\r\n        setName(result.name)\r\n        setDescription(result.description)\r\n    }, [])\r\n    \r\n\r\n    async function editAuthor(ID){\r\n        try{\r\n            formData.append('name',name);\r\n            formData.append('description',description);\r\n            console.log(formData.get('name')) \r\n            console.log(formData.get('description')) \r\n            let result = await fetch (\"http://localhost:8080/authors/\"+ props.match.param.id,{\r\n                method: \"PATCH\",\r\n                body:formData\r\n            })\r\n            result =await result.json();\r\n            alert(ID)\r\n        }\r\n        catch(err){\r\n            console.log(err)\r\n        }\r\n    }\r\n    // console.warn(\"props\", props.match.params.id)\r\n    // useEffect(async () => {\r\n    //     let result = await fetch(\"http://localhost:8080/authors/\" + props.match.params.id, {\r\n    //         method: \"PATCH\"\r\n    //     });\r\n    //     result = await result.json();\r\n    //     setData(result)\r\n    // })\r\n    return (\r\n        <div>\r\n            <Nav />\r\n            <div className=\"col-sm-6 offset-sm-3\">\r\n                <h1>Update Author</h1>\r\n                <input type=\"text\" onChange={(e) => setName(e.target.value)} className=\"form-control\" defaultValue={data.name} /> <br /> <br />\r\n                <input type=\"text\" onChange={(e) => setDescription(e.target.value)} className=\"form-control\" defaultValue={data.description} /> <br /> <br />\r\n\r\n                <button onClick={(e) => editAuthor(data.ID)} className=\"w-100 btn btn-lg btn-primary\">Update Author</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(UpdateAuthor);\r\n\r\n\r\n","C:\\Users\\Amaan\\Downloads\\React-golang-project\\src\\pages\\BookList.js",["88"],[],"import Nav from \"../components/home\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Table } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction BookList() {\r\n\r\n    const [data, setData] = useState([]);\r\n    useEffect(() => {\r\n        getData();\r\n    }, [])\r\n\r\n    async function deletebooks(ID) {\r\n        let result = await fetch(\"http://localhost:8080/books/\" + ID, {\r\n            method: \"DELETE\"\r\n        });\r\n        result = await result.json();\r\n        console.warn(\"result\", data)\r\n        getData()\r\n    }\r\n    async function getData() {\r\n        let result = await fetch(\"http://localhost:8080/books\");\r\n        result = await result.json();\r\n        setData(result)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Nav />\r\n            <div className=\"col-sm-6 offset-sm-3\">\r\n\r\n                <h1>BooksList</h1>\r\n                <Table>\r\n                    <tbody>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Description</th>\r\n                            <th>Delete Books</th>\r\n                            <th>Update Books</th>\r\n\r\n                        </tr>\r\n                        {\r\n                            data.map((item) =>\r\n                                <tr>\r\n                                    \r\n                                    <td>{item.name}</td>\r\n                                    <td>{item.description}</td>\r\n                                    <td><span onClick={() => deletebooks(item.ID)} className=\"delete\">Delete</span></td>\r\n                                    <td>\r\n                                        <Link to={\"updatebook/\" + item.ID}>\r\n                                            <span className=\"update\">Update</span>\r\n                                        </Link>\r\n                                    </td>\r\n\r\n                                </tr>\r\n                            )\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BookList;\r\n","C:\\Users\\Amaan\\Downloads\\React-golang-project\\src\\components\\home.js",["89"],[],"import React from \"react\";\r\nimport { Button, NavDropdown } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Nav() {\r\n\r\n    let user = JSON.parse(localStorage.getItem('user-info'))\r\n    function logOut() {\r\n        if (!localStorage.clear()) {\r\n            return window.location.href = \"/register\"\r\n        }\r\n    }\r\n    //to change a color in the class use text-warning,text-danger for different colours https://getbootstrap.com/docs/4.0/utilities/colors//\r\n    return (\r\n        <nav className=\"navbar navbar-expand-md navbar-dark bg-dark mb-4\">\r\n            <div className=\"container-fluid \">\r\n                <Link to=\"/\" className=\"navbar-brand text-warning\" >Home</Link> \r\n                <div>\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-md-0 navbar_wrapper\">\r\n                        <div className=\"nav-item active\">\r\n                            {\r\n                                localStorage.getItem('email', 'pwd') ?\r\n                                    <>\r\n                                        {/* <li className=\"nav-item active\">\r\n                                            <Link to=\"/\" >Home</Link>\r\n                                        </li> */}\r\n                                        <li className=\"nav-item active text-danger\">\r\n                                       <Link to=\"/addNewbook\" >Add New Book</Link>  \r\n                                        </li>\r\n                                        <li className=\"nav-item active text-warning\">\r\n                                            <Link to=\"/updatebook\" >UpdateBook</Link>\r\n                                        </li>\r\n                                        <li className=\"nav-item active\">\r\n                                            <Link to=\"/bookslist\" >BooksList</Link>\r\n                                        </li>\r\n                                        <li className=\"nav-item active\">\r\n                                            <Link to=\"/addNewauthor\" >Add New Author</Link>\r\n                                        </li>\r\n                                        <li className=\"nav-item active\">\r\n                                            <Link to=\"/updateauthor\" >UpdateAuthor</Link>\r\n                                        </li>\r\n                                        <li className=\"nav-item active\">\r\n                                            <Link to=\"/authorlist\" >AuthorList</Link>\r\n                                        </li>\r\n                                    </>\r\n                                    :\r\n                                    <>\r\n\r\n\r\n                                        <li className=\"nav-item active\">\r\n                                            <Link to=\"/login\" >Login</Link>\r\n                                        </li>\r\n                                        <li className=\"nav-item active\">\r\n                                            <Link to=\"/register\" >Register</Link>\r\n                                        </li>\r\n\r\n                                    </>\r\n                            }\r\n                    \r\n\r\n                        </div >\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            {localStorage.getItem('email', 'pwd') ?\r\n\r\n                <nav>\r\n                    <NavDropdown title={user && user.name}>\r\n                        <NavDropdown.Item onClick={logOut} >Logout</NavDropdown.Item>\r\n                    </NavDropdown>\r\n                </nav>\r\n                : null\r\n            }\r\n        </nav>\r\n\r\n\r\n    );\r\n};\r\nexport default Nav;\r\n","C:\\Users\\Amaan\\Downloads\\React-golang-project\\src\\pages\\AddBook.js",["90"],[],"import Nav from \"../components/home\";\r\nimport { useState } from 'react'\r\n\r\nfunction AddNewBook() {\r\n    const [name, setName] = useState(\"\")\r\n    const [description, setDescription] = useState(\"\")\r\n\r\n    async function addNewBooks() {         //we are defining the addNewBooks func \r\n                                           //here and we are calling it down in the button {addNewBooks}\r\n        let item = { name, description }\r\n        console.warn(name, description)\r\n  \r\n        \r\n\r\n        let result = await fetch(\"http://localhost:8080/books/create\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify(item)\r\n        })\r\n\r\n        result = await result.json()\r\n        alert(\"Your Book Has Been Added, Kindly CHeck it in the BookList Tab\")\r\n\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <Nav />\r\n            <div className=\"col-sm-6 offset-sm-3 h-1\">\r\n                <h1>Add Book</h1>\r\n                <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} className=\"form-control\" placeholder=\"name\" />\r\n                <input type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)} className=\"form-control\" placeholder=\"description\" />\r\n                <br></br>\r\n                <button onClick={addNewBooks} className=\"w-100 btn btn-lg btn-primary\">Add New Book</button>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewBook",{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":3,"column":52,"nodeType":"97","messageId":"98","endLine":3,"endColumn":58},{"ruleId":"95","severity":1,"message":"99","line":8,"column":8,"nodeType":"97","messageId":"98","endLine":8,"endColumn":17},{"ruleId":"100","severity":1,"message":"101","line":52,"column":1,"nodeType":"102","messageId":"103","endLine":52,"endColumn":51},{"ruleId":"95","severity":1,"message":"104","line":17,"column":9,"nodeType":"97","messageId":"98","endLine":17,"endColumn":15},{"ruleId":"95","severity":1,"message":"105","line":4,"column":10,"nodeType":"97","messageId":"98","endLine":4,"endColumn":17},{"ruleId":"106","severity":1,"message":"107","line":13,"column":15,"nodeType":"108","endLine":20,"endColumn":6},{"ruleId":"106","severity":1,"message":"109","line":21,"column":6,"nodeType":"110","endLine":21,"endColumn":8,"suggestions":"111"},{"ruleId":"95","severity":1,"message":"104","line":31,"column":10,"nodeType":"97","messageId":"98","endLine":31,"endColumn":16},{"ruleId":"95","severity":1,"message":"112","line":6,"column":10,"nodeType":"97","messageId":"98","endLine":6,"endColumn":18},{"ruleId":"95","severity":1,"message":"104","line":19,"column":5,"nodeType":"97","messageId":"98","endLine":19,"endColumn":11},{"ruleId":"95","severity":1,"message":"113","line":1,"column":17,"nodeType":"97","messageId":"98","endLine":1,"endColumn":25},{"ruleId":"106","severity":1,"message":"107","line":12,"column":15,"nodeType":"108","endLine":20,"endColumn":6},{"ruleId":"106","severity":1,"message":"109","line":20,"column":8,"nodeType":"110","endLine":20,"endColumn":10,"suggestions":"114"},{"ruleId":"95","severity":1,"message":"104","line":33,"column":13,"nodeType":"97","messageId":"98","endLine":33,"endColumn":19},{"ruleId":"95","severity":1,"message":"104","line":17,"column":9,"nodeType":"97","messageId":"98","endLine":17,"endColumn":15},{"ruleId":"95","severity":1,"message":"115","line":2,"column":10,"nodeType":"97","messageId":"98","endLine":2,"endColumn":16},{"ruleId":"95","severity":1,"message":"104","line":20,"column":9,"nodeType":"97","messageId":"98","endLine":20,"endColumn":15},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"no-unused-vars","'Routes' is defined but never used.","Identifier","unusedVar","'Protected' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'result' is assigned a value but never used.","'NavItem' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'description', 'name', and 'props.match.params.id'. Either include them or remove the dependency array.","ArrayExpression",["118"],"'faCoffee' is defined but never used.","'useState' is defined but never used.",["119"],"'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"120","fix":"121"},{"desc":"120","fix":"122"},"Update the dependencies array to be: [description, name, props.match.params.id]",{"range":"123","text":"124"},{"range":"125","text":"124"},[740,742],"[description, name, props.match.params.id]",[706,708]]